## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
determine <- is.element('[0-9]', vect)
if(determine) {
print("Oh No!")
} else {
print("Yay!")
}
}
contains_digits(top_three) #contains digits
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
determine <- is.element('[0-9]', vect)
if(determine) {
print("Oh No!")
} else {
print("Yay!")
}
}
contains_digits(c("dog")) #contains digits
contains_digits(c("dog2"))
determine <- is.element('0', vect)
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
determine <- is.element('[:digits:]', vect)
if(determine) {
print("Oh No!")
} else {
print("Yay!")
}
}
contains_digits(c("dog")) #contains digits
contains_digits(c("dog2"))
determine <- any(vect=='[0-9]')
if(determine) {
print("Oh No!")
} else {
print("Yay!")
}
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
determine <- any(vect=='[0-9]')
if(determine) {
print("Oh No!")
} else {
print("Yay!")
}
}
contains_digits(c("dog")) #contains digits
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
determine <- any(vect=='[0-9]')
if(determine) {
print("Oh No!")
} else {
print("Yay!")
}
}
contains_digits(c("dog")) #contains digits
contains_digits(c("dog2"))
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
v <- vect
determine <- any(v=='[0-9]')
if(determine) {
print("Oh No!")
} else {
print("Yay!")
}
}
contains_digits(c("dog")) #contains digits
contains_digits(c("dog2"))
contains_digits(top_three)
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
x <- 0
len_vector <- length(vect)
for (i in 1:len_vector) {
if(any(vect[i]=='[0-9]')){
x + 1
}
}
}
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
contains_digits <- function(vect) {
x <- 0
len_vector <- length(vect)
for (i in 1:len_vector) {
if(any(vect[i]=='[0-9]')){
x + 1
}
}
if(x > 0) {
print("Oh no!")
} else {
print("Yay!")
}
}
contains_digits(c("dog")) #contains digits
contains_digits(top_three)
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
ContainDigits <- function(vector) {
if(grep('[0-9]', vector)) {
print("Oh no!")
} else {
print("Yay!")
}
}
ContainDigits(top_three)
if(any(grep('[0-9]', vector)) {
print("Oh no!")
} else {
print("Yay!")
}
}
ContainDigits(top_three)
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
ContainDigits <- function(vector) {
if(any(grep('[0-9]', vector))) {
print("Oh no!")
} else {
print("Yay!")
}
}
ContainDigits(top_three)
ContainDigits(removed)
## Write an if/else statement that checks to see if your vector has any digits. If it does have
## digits, print "Oh no!", if it does not then print "Yay!"
ContainDigits <- function(vector) {
if(any(grep('[0-9]', vector))) {
print("Oh no!")
} else {
print("Yay!")
}
}
ContainDigits(top_three) # contains Digits
ContainDigits(removed) # Does not contain digits
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# Read in the female baby names data file found in the `data` folder into a
# variable called `names`. Remember to NOT treat the strings as factors!
names <- read.csv('female_names.csv')
source('~/.active-rstudio-document')
# Read in the female baby names data file found in the `data` folder into a
# variable called `names`. Remember to NOT treat the strings as factors!
names <- read.csv('female_names.csv')
read.csv('~/Downloads/female_names.csv')
names <- read.csv('~/Downloads/female_names.csv', stringsAsFactors = FALSE)
View(names)
View(names)
View(names)
# Create a data frame `names_2013` that contains only the rows for the year 2013
names_2013 <- names[names$year == '2013']
# Create a data frame `names_2013` that contains only the rows for the year 2013
names_2013 <- names[names$year == '2013',]
print(names_2013)
View(names)
# What was the most popular female name in 2013?
mode(names_2013[names_2013$name,])
View(names_2013)
View(names_2013)
# What was the most popular female name in 2013?
(names_2013[,max(names_2013$prop)])
# What was the most popular female name in 2013?
pop <- (names_2013[,max(names_2013$prop)])
View(pop)
View(pop)
View(names_2013)
View(names_2013)
# What was the most popular female name in 2013?
popular <- names_2013['name', 'prop'.max()]
# What was the most popular female name in 2013?
popular <- names_2013['name', 'prop'.max]
# What was the most popular female name in 2013?
popular <- names_2013['name', 'prop']
# What was the most popular female name in 2013?
popular <- names_2013[,names_2013$prop.argmax()]
# What was the most popular female name in 2013?
popular <- names_2013[,names_2013$prop.argmax]
# What was the most popular female name in 2013?
popular <- names_2013[,names_2013$prop.max]
View(popular)
View(popular)
# What was the most popular female name in 2013?
popular <- names_2013[names_2013$name,names_2013$prop.max]
View(names_2013)
View(names_2013)
# What was the most popular female name in 2013?
popular <- names_2013[names_2013$prop == max(names_2013$prop), ]
View(popular)
install.packages(jsonlite)
install.packages("jsonlite")
install.packages("httr")
install.packages("tidyr")
source("~/Documents/keys.R")
library(dplyr)
library(httr)
library(jsonlite)
library(tidyr)
source("~/Documents/keys.R")
query <- list(address=address, key=google.key)
query <- list(address = address, key=google.key)
address <- "Bend, Oregon"
query <- list(address=address, key=google.key)
View(query)
res <- GET(base, query=query)
base <- "https://www.googleapis.com/civicinfo/v2/representatives"
res <- GET(base, query=query)
View(res)
http_status(res)
class(res)
data <- content(res, "text") %>%
fromJSON()
View(data)
dim(data)
View(res)
source("keys.R")
source("~/Documents/keys.R")
base <-  "https://www.googleapis.com/civicinfo/v2/representatives/"
address <- "Bend, Oregon"
query <- list(address = address, key = key)
source("~/Documents/keys.R")
query <- list(address = address, key = key)
base <-  "https://www.googleapis.com/civicinfo/v2/representatives/"
address <- "Bend, Oregon"
query <- list(address=address, key=google.key)
res <- httr::GET(base, query = query)
print(http_status(res))
data <-  content(res, 'text') %>%
fromJSON()
class(data)
uri <- paste0(base, "/address/", address)
uri <- paste0(base, "/address/", address)
View(query)
res <- httr::GET(uri)
print(http_status(res))
res <- httr::GET(uri, add_headers('key' = google.key))
print(http_status(res))
data <-  content(res, 'text') %>%
fromJSON()
uri <- paste0(base, "?key=", google.key, "&address=", address)
print(uri)
uri <- paste0(base, "?key=", google.key, "&address=Bend%20OR")
res <- httr::GET(uri)
print(http_status(res))
data <-  content(res, 'text') %>%
fromJSON()
class(data)
View(data)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(mergedDataFrame)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(mergedDataFrame)
repsByAddress("Bend, Oregon")
View(mergedDataFrame)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(mergedDataFrame)
repsByAddress("Bend, Oregon")
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(Oregon)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(Washington)
View(Oregon)
View(Washington)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(California)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages(knit)
install.packages("knit")
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(Washington)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(mergedDataFrame)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(Oregon)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(new)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(new)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(new)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(new)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(new2)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
View(Oregon)
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
source('~/Desktop/INFO/INFO_201/a6-apis-dawgs/process-data.R')
view(Oregon[1, 6])
View(Oregon)
View(Washington)
## this is the code chunk for R setup.
## You may load libraries and your google key here
## You can also set various knitr options here
knitr::opts_chunk$set(echo=FALSE, message=FALSE)
library(dplyr)
source("~/Documents/keys.R")
source('process-data.R')
shiny::runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
View(playlistTest)
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
devtools::install_github("r-lib/devtools")
install.packages('devtools')
devtools::install_github("r-lib/devtools")
devtools::install_github("hadley/devtools")
force = TRUE
devtools::install_github("hadley/devtools")
source('~/Desktop/testingFinal.R')
source('~/Desktop/testingFinal.R')
install_github("hadley/rvest")
install_github("hadley/rvest")
source('~/Desktop/testingFinal.R')
shiny::runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
install_github("hadley/rvest")
devtools::install_github("hadley/devtools")
beatles <- get_artist_audio_features('the beatles')
install.packages("plotly")
shiny::runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
beatles <- get_artist_audio_features('the beatles')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
View(playlist_codes)
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
shiny::runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
install.packages("DT")
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
View(playlistTest)
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
runApp('Desktop/INFO/INFO_201/info_201_group_project/Final_Project')
getwd()
setwd("~/Desktop/INFO/INFO_201/info_201_group_project/Final_Project")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinywidgets")
Yes
install.packages("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
